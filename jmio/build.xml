<!-- Bundle Ant File

     Author: Humberto Cervantes
     Version: 1.0 (15042004)
     Version: 1.1 (30122004) Didier Donsez
     Version: 1.2 (25032005) Didier Donsez, add native
 
      Based on the ant file located at the following address:
         http://oscar-osgi.sourceforge.net/repo/bundlerepository

     This antfile creates a bundle where the embedded libraries and
     resources are all placed at the root directory of the bundle.
     Please note that the values of bundle.dir and dist.dir may be
     overriden externally by the Oscar build process.

     Please note: 
     
     * the project name must match the name of the directory
       where the project is located
       
     * the manifest must be placed under the res directory
-->

<project name="__BUNDLE_NAME__" default="all" basedir=".">


	<!-- Modifiable global properties. -->
	<!--
	<property name="bundle.name" value="${ant.project.name}" />
	-->
	<property file="project.properties" />

	<property name="debug.flag" value="on" />
	<!-- repository.dir is a directory that contains a repository.xml file used by OBR -->
	<property name="repository.dir" value="." />
	<!-- bundle.dir is the directory where the bundle is placed -->
	<property name="bundle.dir" value="${repository.dir}" />
	<!-- dist.dir is the directory where the source jar is placed -->
	<property name="dist.dir" value="${repository.dir}" />

	<!-- Fixed global properties (no need to modify)-->
	<!-- These are input directories -->
	<property name="src.dir" value="src" />
	<property name="externallibs.dir" value="externallibs" />
	<property name="embeddedlibs.dir" value="embeddedlibs" />
	<property name="resource.dir" value="res" />
	<property name="native.dir" value="native" />
	<property name="manifest.dir" value="manifest" />
	<property name="doc.dir" value="doc" />
	<!-- These are output directories -->
	<property name="output.dir" value="build" />
	<property name="apidoc.dir" value="${doc.dir}/api" />

	<!-- Create class path from lib and output directories. -->
	<path id="classpath">
		<pathelement location="${output.dir}" />
		<fileset dir="${externallibs.dir}">
			<include name="*.jar" />
		</fileset>
		<fileset dir="${embeddedlibs.dir}">
			<include name="*.jar" />
		</fileset>
	</path>

	<!-- Create directories. -->
	<target name="init">
		<mkdir dir="${src.dir}" />
		<mkdir dir="${output.dir}" />
		<mkdir dir="${externallibs.dir}" />
		<mkdir dir="${embeddedlibs.dir}" />
		<mkdir dir="${resource.dir}" />
		<mkdir dir="${native.dir}" />
		<mkdir dir="${doc.dir}" />
		<mkdir dir="${apidoc.dir}" />
	</target>

	<!-- Compile and JAR everything -->
	<target name="all" depends="init">
		<antcall target="compile" />
		<antcall target="jar" />
	</target>

	<!-- Compile -->
	<target name="compile" depends="init">
		<javac srcdir="${src.dir}" destdir="${output.dir}" debug="${debug.flag}" verbose="no" deprecation="no">
			<classpath refid="classpath" />
			<include name="**/*.java" />
		</javac>
	</target>

	<!-- JAR the bundle. -->
	<target name="jar" depends="compile">
		<!-- Copy embedded libs into output directory -->
		<copy todir="${output.dir}">
			<fileset dir="${embeddedlibs.dir}">
				<include name="*.jar" />
			</fileset>
		</copy>
		<!-- Copy resources into output directory -->
		<copy todir="${output.dir}">
			<fileset dir="${resource.dir}">
			</fileset>
		</copy>

		<!-- Copy native into output directory -->
		<copy todir="${output.dir}">
			<fileset dir="${native.dir}">
			</fileset>
		</copy>
		
		<!-- JAR the output directory -->
		<jar manifest="${manifest.dir}/manifest.mf" jarfile="${bundle.dir}/${bundle.name}.jar" basedir="${output.dir}">
			<include name="**" />
		</jar>
	</target>

	<!-- Create the source distribution JAR file. -->
	<target name="dist">
		<!-- Create API doc directory. -->
		<mkdir dir="${apidoc.dir}" />

		<!-- Generate API documentation. -->
		<javadoc
			sourcepath="${src.dir}"
			packagenames="*"
			destdir="${apidoc.dir}"
			author="true"
			version="true"
			use="true"
			windowtitle="${bundle.fullname} API Documentation"
			classpathref="classpath"
		>
			<link href="http://java.sun.com/j2se/1.4/docs/api/"/>
<link href="http://bundles.osgi.org/javadoc/r4/"/>
		</javadoc>
		<!-- JAR the source and doc trees. -->

		<jar jarfile="${dist.dir}/${bundle.name}-src.jar" basedir="..">
			<include name="${bundle.name}/**" />
			<exclude name="${bundle.name}/${output.dir}/**" />
			<exclude name="${bundle.name}/extra*/**" />
			<exclude name="${bundle.name}/tmp/**" />
			<exclude name="${bundle.name}/temp/**" />
			<exclude name="${bundle.name}/${bundle.name}.jar" />
			<exclude name="${bundle.name}/${bundle.name}-src.jar" />
			<exclude name="${bundle.name}/${bundle.name}-src-*.jar" />
			<exclude name="${bundle.name}/${bundle.dir}/${bundle.name}.jar" />
			<exclude name="${bundle.name}/${dist.dir}/${bundle.name}-src.jar" />
			<exclude name="${bundle.name}/${dist.dir}/${bundle.name}-src-*.jar" />
		</jar>
	</target>

	<!-- Clean up everything. -->
	<target name="clean">
		<delete dir="${output.dir}" />
		<delete dir="${apidoc.dir}" />
		<delete file="${bundle.dir}/${bundle.name}.jar" />
		<delete file="${dist.dir}/${bundle.name}-src.jar" />
	</target>

</project>
